import Wrapper from "../components/Wrapper";
import React, { useState } from "react";
import TextInput from "../components/TextInput";
import Button from "../components/Button";
import { toast } from "react-toastify";

const Cadastro = () => {
    const [isAdvisor, setIsAdvisor] = useState(false);
    const [userPhoto, setUserPhoto] = useState<string | null>(null);
    const [termsAccepted, setTermsAccepted] = useState(false);

    const handlePhotoChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        const file = e.target.files?.[0];
        if (file) {
            const reader = new FileReader();
            reader.onloadend = () => {
                setUserPhoto(reader.result as string);
            };
            reader.readAsDataURL(file);
        }
    };

    const handleSubmit = (e: React.FormEvent) => {
        e.preventDefault();
        const formData = new FormData(e.target as HTMLFormElement);

        if (!termsAccepted) {
            return toast.error("Você precisa aceitar os termos de condições.");
        }

        toast.success("Formulário enviado com sucesso.");
        (e.target as HTMLFormElement).reset();
        setUserPhoto(null);
        setIsAdvisor(false);
        setTermsAccepted(false);
    };

    return (
        <div className="bg-white text-black">
            <Wrapper className="my-8 flex w-[95%] max-w-[1100px] flex-col rounded-md bg-gray-100 px-4 py-6">
                <h2 className="mb-6 text-center text-2xl font-semibold text-gray-800">Formulário de Cadastro</h2>

                <form onSubmit={handleSubmit} className="flex flex-col justify-between gap-10 md:flex-row">
                    {/* Lado esquerdo */}
                    <div className="flex w-full flex-col gap-6 md:w-1/2">
                        <TextInput
                            required
                            label="Nome completo"
                            placeholder="Digite seu nome completo"
                            type="text"
                            name="fullName"
                            containerClassName="text-left w-full"
                            labelClassName="text-black"
                            inputClassName="border-black text-black"
                        />

                        <TextInput
                            required
                            label="Senha"
                            placeholder="Digite sua senha"
                            type="password"
                            name="password"
                            containerClassName="text-left w-full"
                            labelClassName="text-black"
                            inputClassName="border-black text-black"
                        />

                        <div className="flex items-center gap-3">
                            <input
                                type="checkbox"
                                id="isAdvisor"
                                checked={isAdvisor}
                                onChange={(e) => setIsAdvisor(e.target.checked)}
                            />
                            <label htmlFor="isAdvisor" className="text-black text-base">
                                É um orientador?
                            </label>
                        </div>

                        {isAdvisor && (
                            <div>
                                <label className="text-black">Anexe um .zip com fotos e PDFs</label>
                                <input
                                    required
                                    type="file"
                                    name="advisorZip"
                                    accept=".zip"
                                    className="mt-2 w-full rounded border border-gray-400 bg-gray-200 p-2 text-black"
                                />
                            </div>
                        )}

                        <TextInput
                            required
                            label="CPF"
                            placeholder="Digite seu CPF"
                            type="text"
                            name="cpf"
                            containerClassName="text-left w-full"
                            labelClassName="text-black"
                            inputClassName="border-black text-black"
                        />

                        <TextInput
                            required
                            label="Telefone"
                            placeholder="(00) 00000-0000"
                            type="tel"
                            name="phone"
                            containerClassName="text-left w-full"
                            labelClassName="text-black"
                            inputClassName="border-black text-black"
                        />

                        <div className="flex items-center gap-3">
                            <input
                                type="checkbox"
                                id="terms"
                                checked={termsAccepted}
                                onChange={(e) => setTermsAccepted(e.target.checked)}
                            />
                            <label htmlFor="terms" className="text-black text-base">
                                Estou de acordo com os termos de condições
                            </label>
                        </div>

                        <Button type="button" onClick={() => toast.info("Abrir termos de condições")}>
                            Ver termos de condições
                        </Button>
                    </div>

                    {/* Lado direito */}
                    <div className="flex w-full flex-col items-center justify-between gap-6 md:w-1/2">
                        {userPhoto ? (
                            <img
                                src={userPhoto}
                                alt="Foto do usuário"
                                className="h-48 w-48 rounded-full object-cover border border-black"
                            />
                        ) : (
                            <div className="flex h-48 w-48 items-center justify-center rounded-full border border-black bg-gray-300 text-center text-sm text-gray-700">
                                Sem foto selecionada
                            </div>
                        )}

                        <input
                            type="file"
                            name="profilePhoto"
                            accept="image/*"
                            onChange={handlePhotoChange}
                            className="w-full text-black"
                        />

                        <Button type="submit">Finalizar</Button>
                    </div>
                </form>
            </Wrapper>
        </div>
    );
};

export default Cadastro;
